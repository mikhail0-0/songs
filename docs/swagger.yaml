definitions:
  controller.CreateSongDTO:
    properties:
      group:
        example: Muse
        maxLength: 100
        minLength: 3
        type: string
      song:
        example: Supermassive Black Hole
        maxLength: 100
        minLength: 3
        type: string
    required:
    - group
    - song
    type: object
  controller.FindSongDTO:
    properties:
      group:
        example: Muse
        maxLength: 100
        minLength: 3
        type: string
      limit:
        example: "1"
        type: string
      link:
        example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
        maxLength: 100
        minLength: 3
        type: string
      offset:
        example: "1"
        type: string
      releaseDateBegin:
        example: "1717188495"
        type: string
      releaseDateEnd:
        example: "1727188495"
        type: string
      song:
        example: Supermassive Black Hole
        maxLength: 100
        minLength: 3
        type: string
      text:
        example: |-
          Ooh baby, don't you know I suffer?
          Ooh baby, can you hear me moan?
          You caught me under false pretenses
          How long before you let me go?

          Ooh
          You set my soul alight
          Ooh
          You set my soul alight
        maxLength: 10000
        minLength: 3
        type: string
    type: object
  controller.GetTextDTO:
    properties:
      id:
        example: 147367f5-93ef-432d-8a97-b06f716f9fad
        type: string
      limit:
        example: "1"
        type: string
      offset:
        example: "1"
        type: string
    required:
    - id
    type: object
  controller.IdDTO:
    properties:
      id:
        example: 147367f5-93ef-432d-8a97-b06f716f9fad
        type: string
    required:
    - id
    type: object
  controller.UpdateSongDTO:
    properties:
      group:
        example: Muse
        maxLength: 100
        minLength: 3
        type: string
      id:
        example: 147367f5-93ef-432d-8a97-b06f716f9fad
        type: string
      link:
        example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
        maxLength: 100
        minLength: 3
        type: string
      releaseDate:
        example: 16.07.2006
        type: string
      song:
        example: Supermassive Black Hole
        maxLength: 100
        minLength: 3
        type: string
      text:
        example: |-
          Ooh baby, don't you know I suffer?
          Ooh baby, can you hear me moan?
          You caught me under false pretenses
          How long before you let me go?

          Ooh
          You set my soul alight
          Ooh
          You set my soul alight
        maxLength: 10000
        minLength: 3
        type: string
    required:
    - id
    type: object
  song.Song:
    properties:
      group:
        example: Muse
        type: string
      id:
        example: 147367f5-93ef-432d-8a97-b06f716f9fad
        type: string
      link:
        example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
        type: string
      name:
        example: Supermassive Black Hole
        type: string
      releaseDate:
        example: "2006-07-16T00:00:00+03:00"
        type: string
      text:
        example: |-
          Ooh baby, don't you know I suffer?
          Ooh baby, can you hear me moan?
          You caught me under false pretenses
          How long before you let me go?

          Ooh
          You set my soul alight
          Ooh
          You set my soul alight
        type: string
    type: object
info:
  contact: {}
  description: API for library of songs
  title: Songs Library API
  version: "1.0"
paths:
  /songs:
    delete:
      consumes:
      - application/json
      description: Delete song by id
      parameters:
      - description: Data with song id
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/controller.IdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/song.Song'
        "400":
          description: bad request data
      summary: Delete song
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Find info by song name and group then record it
      parameters:
      - description: Data for create song
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/controller.CreateSongDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/song.Song'
        "400":
          description: bad request data
      summary: Create song
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Update song info
      parameters:
      - description: Data for update song info
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateSongDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/song.Song'
        "400":
          description: bad request data
      summary: Update song
      tags:
      - songs
  /songs/find:
    post:
      consumes:
      - application/json
      description: Find by info and paginate
      parameters:
      - description: Data for find song
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/controller.FindSongDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/song.Song'
            type: array
        "400":
          description: bad request data
      summary: Find song
      tags:
      - songs
  /songs/text:
    post:
      consumes:
      - application/json
      description: Get song text and paginate by verses
      parameters:
      - description: Data for get song text
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/controller.GetTextDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: bad request data
      summary: Get text
      tags:
      - songs
swagger: "2.0"
